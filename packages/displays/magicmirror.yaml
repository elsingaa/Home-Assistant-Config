#########################################################
#                                                       #
#      SETTINGS & CUSTOMIZATION FOR MAGIC MIRROR        #
#                                                       #
#########################################################
switch:
  - platform: mqtt
    name: 'MagicMirror01'
    state_topic: 'homeassistant/switch/hal/magicMirror01'
    command_topic: 'homeassistant/switch/hal/magicMirror01/set'
    payload_on: 'on'
    payload_off: 'off'
    value_template:  '{{ value }}'

input_boolean:
  override_magicmirror_power:
    name: Magic Mirror override
    initial: on

automation:
#- alias: Turn off magic mirror at night
#  description: ''
#  trigger:
#  - at: '22:30'
#    platform: time
#  condition: 
#    condition: and
#    conditions:
#    - condition: state
#      entity_id: 'input_boolean.magicmirror_power'
#      state: 'on'
#  action:
#  - alias: ''
#    data: {}
#    entity_id: switch.magicmirror01
#    service: switch.turn_off

#- alias: Turn on magic mirror in the morning (workday)
#  description: ''
#  trigger:
#  - at: '06:30'
#    platform: time
#  condition:
#    condition: and
#    conditions:
#    - condition: state
#      entity_id: 'binary_sensor.workday_sensor'
#      state: 'on'
#    - condition: state
#      entity_id: 'input_boolean.magicmirror_power'
#      state: 'on'
#  action:
#  - alias: ''
#    data: {}
#    entity_id: switch.magicmirror01
#    service: switch.turn_on

#- alias: Turn on magic mirror in the morning (non-workday)
#  description: ''
#  trigger:
#  - at: '08:30'
#    platform: time
#  condition:
#    condition: and
#    conditions:
#    - condition: state
#      entity_id: 'binary_sensor.workday_sensor'
#      state: 'off'
#    - condition: state
#      entity_id: 'input_boolean.magicmirror_power'
#      state: 'on'
#  action:
#  - alias: ''
#    data: {}
#    entity_id: switch.magicmirror01
#    service: switch.turn_on


# Turn on magic mirror when movement occurs in the hallway    
- alias: Turn on magic mirror when movement occurs in the hallway
  trigger:
    platform: state
    entity_id: binary_sensor.sensor_hal_motion
    to: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.override_magicmirror_power
      state: 'on'
  action:
  - service: timer.start
    entity_id: timer.timer_magicmirror01
 
  - service: switch.turn_on
    entity_id: switch.magicmirror01

- alias: Turn off magic mirror 10 minutes after last movement
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
     entity_id: timer.timer_magicmirror01
  action:
    service: switch.turn_off
    entity_id: switch.magicmirror01

timer:
  timer_magicmirror01:
    duration: '00:10:00'

# Customized sensors for Magic Mirror
sensor:
   - platform: template
     sensors:
       slaapkamer_raam_status:
         value_template: '{% if states.binary_sensor.raam_slaapkamer %}
          {% if states.binary_sensor.raam_slaapkamer.state == "on" %}
            Open
          {% else %}
            Dicht
          {% endif %}
          {% else %}
          n/a
          {% endif %}'
         friendly_name: 'Slaapkamerraam'

   - platform: template
     sensors:
       werkkamer_raam_status:
         value_template: '{% if states.binary_sensor.raam_werkkamer %}
          {% if states.binary_sensor.raam_werkkamer.state == "on" %}
            Open
          {% else %}
            Dicht
          {% endif %}
          {% else %}
          n/a
          {% endif %}'
         friendly_name: 'Werkkamerraam'

   - platform: template
     sensors:
       fitness_raam_status:
         value_template: '{% if states.binary_sensor.raam_fitness %}
          {% if states.binary_sensor.raam_fitness.state == "on" %}
            Open
          {% else %}
            Dicht
          {% endif %}
          {% else %}
          n/a
          {% endif %}'
         friendly_name: 'Raam Fitness'                  

   - platform: template
     sensors:
       locatie_aj_full:
         value_template: "{{ state_attr('sensor.locatie_aj','street') }} {{ state_attr('sensor.locatie_aj','street_number')}} {{ state_attr('sensor.locatie_aj','postal_town') }} ({{ state_attr('sensor.locatie_aj','state_province') }})"

         friendly_name: 'Locatie AJ'
 
   - platform: template
     sensors:
       locatie_tineke_full:
         value_template: "{{ state_attr('sensor.locatie_tineke','street') }} {{ state_attr('sensor.locatie_tineke','street_number')}} {{ state_attr('sensor.locatie_tineke','postal_town') }} ({{ state_attr('sensor.locatie_tineke','state_province') }})"

         friendly_name: 'Locatie Tineke'
                    
   - platform: template
     sensors:
       verlichting_woning_status:
         value_template: '{% if states.light.verlichting_huis %}
          {% if states.light.verlichting_huis.state == "on" %}
            Aan
          {% else %}
            Uit
          {% endif %}
          {% else %}
          n/a
          {% endif %}'
         friendly_name: 'Verlichting woning'
